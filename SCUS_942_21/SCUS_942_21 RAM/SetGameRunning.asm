80010ad0: 3c088003 lui r8,0x8003
80010ad4: 8d088ae4 lw r8,-0x751c(r8)                #   *0x80028ae4
80010ad8: 27bdfff0 addiu r29,r29,-0x0010            
80010adc: afb00004 sw r16,0x0004(r29)
80010ae0: afb10008 sw r17,0x0008(r29)
80010ae4: afbf000c sw r31,0x000c(r29)
80010ae8: 1500000f bne r8,r0,0x80010b28             #   if (*0x80028ae4 == 0) {
80010aec: 34080001 ori r8,r0,0x0001
80010af0: 3c018003 lui r1,0x8003
80010af4: ac288ae4 sw r8,-0x751c(r1)                #       *0x80028ae4 = 1
80010af8: 3c108001 lui r16,0x8001
80010afc: 26100000 addiu r16,r16,0x0000             #       ptr = 0x80010000
80010b00: 3c110000 lui r17,0x0000
80010b04: 26310000 addiu r17,r17,0x0000             #       s1 = 0
80010b08: 12200007 beq r17,r0,0x80010b28            #       if (s1 != 0) {
80010b0c: 00000000 nop
                                                    #           do {
80010b10: 8e080000 lw r8,0x0000(r16)                #               func = *ptr   
80010b14: 26100004 addiu r16,r16,0x0004             #               ptr = ptr + 4
80010b18: 0100f809 jalr r8,r31                      #               func();
80010b1c: 2631ffff addiu r17,r17,-0x0001            #               s1 = s1 - 1
80010b20: 1620fffb bne r17,r0,0x80010b10
80010b24: 00000000 nop                                  
                                                    #           }  while (s1 != 0);
                                                    #       }
                                                    #   }
80010b28: 8fbf000c lw r31,0x000c(r29)
80010b2c: 8fb10008 lw r17,0x0008(r29)
80010b30: 8fb00004 lw r16,0x0004(r29)
80010b34: 27bd0010 addiu r29,r29,0x0010
80010b38: 03e00008 jr r31
80010b3c: 00000000 nop